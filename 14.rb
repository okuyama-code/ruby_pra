# 2つの文字列を比較して、共通する文字を見つける関数
def compare_string(string_1, string_2)
  # 与えられた文字列を1文字ずつの配列に分割
  val_1 = string_1.split('')
  val_2 = string_2.split('')

  # 2つの配列の共通する要素を取得する（重複は除外）
  common_chars = val_1 & val_2

  # 共通する文字を返す
  common_chars
end

# テスト用の文字列を使って関数を呼び出し、結果を出力
print(compare_string("rubys", "rails"))
# ["r", "s"]

# & 集合の積演算です。両方の配列に含まれる要素からなる新しい配列を返します。重複する要素は取り除かれます。

# split('') は、与えられた文字列を空の文字列 '' を区切り文字として分割するメソッドです。この場合、与えられた文字列は1文字ずつの配列に分割されます。

# 例えば、文字列 "ruby" を split('') メソッドで分割すると、次のような配列が得られます:

# ruby
# Copy code
# ["r", "u", "b", "y"]
# ここで、各文字が1つの要素として配列に追加されます
